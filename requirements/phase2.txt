# Phase 2: BigQuery Integration & Real-time Analytics Dependencies
# Build on Phase 1 foundation with new analytics and streaming capabilities

# ============================================================================
# BigQuery Integration
# ============================================================================
google-cloud-bigquery>=3.11.0          # BigQuery operations and query execution
google-cloud-bigquery-storage>=2.22.0  # BigQuery Storage Read API for performance
db-dtypes>=1.1.1                       # Data types for BigQuery integration
pyarrow>=14.0.0                        # Already in Phase 1, ensure compatibility

# ============================================================================
# Real-time Streaming (Pub/Sub & Dataflow)
# ============================================================================
google-cloud-pubsub>=2.18.0           # Pub/Sub messaging for real-time events
google-cloud-dataflow-client>=0.8.6   # Dataflow pipeline management
apache-beam[gcp]>=2.50.0              # Streaming data processing framework

# ============================================================================
# Advanced Analytics & SQL Generation
# ============================================================================
sqlalchemy>=2.0.0                     # SQL query building and ORM
sqlparse>=0.4.4                       # SQL parsing and optimization analysis
pyparsing>=3.1.0                      # SQL parsing utilities
jinja2>=3.1.2                         # Template engine for dynamic SQL generation

# ============================================================================
# Time Series Analysis
# ============================================================================
pandas>=2.0.0                         # Already in Phase 1, ensure version
numpy>=1.24.0                         # Mathematical operations for analytics
scipy>=1.11.0                         # Statistical analysis and pattern recognition
statsmodels>=0.14.0                   # Time series statistical models
ta>=0.10.2                            # Technical analysis indicators

# ============================================================================
# Real-time Data Validation & Processing
# ============================================================================
pydantic>=2.4.0                       # Data validation for streaming messages
jsonschema>=4.19.0                    # JSON schema validation
fastjsonschema>=2.18.0                # Fast JSON validation for streams
marshmallow>=3.20.0                   # Serialization/deserialization

# ============================================================================
# Performance & Caching (Phase 2 Enhancements)
# ============================================================================
# Note: Use Phase 1 unified cache system - these are for BigQuery-specific optimizations
google-cloud-secret-manager>=2.16.0   # Secure credential management
google-auth>=2.23.0                   # Authentication for GCP services
cachetools>=5.3.0                     # Already in Phase 1, ensure compatibility

# ============================================================================
# Monitoring & Observability Enhancements
# ============================================================================
google-cloud-monitoring>=2.15.0       # Enhanced metrics collection
google-cloud-logging>=3.8.0           # Structured logging for analytics
prometheus-client>=0.17.0             # Metrics export for monitoring
grafana-api>=1.0.3                    # Dashboard automation

# ============================================================================
# Development & Testing Dependencies
# ============================================================================
pytest-asyncio>=0.21.0                # Async testing support
pytest-mock>=3.11.0                   # Mocking for BigQuery/Pub/Sub tests
pytest-benchmark>=4.0.0               # Performance benchmarking
testcontainers>=3.7.0                 # Integration testing with containers

# BigQuery Testing
google-cloud-bigquery-emulator>=0.1.0 # Local BigQuery emulation
sqlalchemy-bigquery>=1.6.0            # BigQuery dialect for SQLAlchemy testing

# Pub/Sub Testing
google-cloud-pubsub-emulator>=0.1.0   # Local Pub/Sub emulation
pubsub-emulator>=0.1.0                 # Alternative Pub/Sub emulator

# ============================================================================
# Code Quality & Security
# ============================================================================
bandit>=1.7.5                         # Security scanning
safety>=2.3.0                         # Dependency vulnerability scanning
pip-audit>=2.6.0                      # Dependency security auditing

# ============================================================================
# Documentation Generation
# ============================================================================
sphinx>=7.1.0                         # Documentation generation
sphinx-rtd-theme>=1.3.0               # Documentation theme
myst-parser>=2.0.0                    # Markdown support for Sphinx

# ============================================================================
# Optional: ML Pipeline Preparation (for future Phase 3)
# ============================================================================
# These are optional for Phase 2 but can be included for future readiness
# google-cloud-aiplatform>=1.34.0     # Vertex AI integration
# scikit-learn>=1.3.0                 # ML algorithms
# tensorflow>=2.13.0                  # Deep learning (if needed)

# ============================================================================
# Version Compatibility Notes
# ============================================================================
# - All google-cloud-* packages are compatible with each other
# - Apache Beam version is tested with Google Cloud services
# - Pandas/NumPy versions ensure compatibility with BigQuery data types
# - PyArrow version matches Phase 1 for consistent Parquet handling
# - SQLAlchemy 2.0+ provides modern async support needed for performance

# ============================================================================
# Installation Instructions
# ============================================================================
# Install Phase 2 dependencies:
# pip install -r requirements/phase2.txt
#
# For development environment:
# pip install -r requirements/phase2.txt -r requirements/dev.txt
#
# Note: Ensure Phase 1 dependencies are already installed and working
